<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.backoven.catdogshelter.domain.missing.query.mapper.MissingPostQueryMapper">

    <!-- REQ-021 게시글 서치 -->
    <select id="selectMissingPostSearch" resultType="com.backoven.catdogshelter.domain.missing.query.dto.MissingPostQueryDTO">
        SELECT p.id, p.title, p.content, p.created_at, p.view,
        u.user_name AS userName
        FROM missingPost p
        LEFT JOIN user u ON p.user_id = u.user_id
        WHERE p.is_deleted = FALSE
        <if test="keyword != null and keyword != ''">
            AND (p.title LIKE CONCAT('%', #{keyword}, '%')
            OR p.content LIKE CONCAT('%', #{keyword}, '%')
            OR u.user_name LIKE CONCAT('%', #{keyword}, '%'))
        </if>
        ORDER BY p.created_at DESC
        LIMIT #{limit} OFFSET #{offset}
    </select>

    <!-- REQ-029 조회수 기준 인기 게시글 -->
    <select id="selectAllMissingPostsByView" resultType="com.backoven.catdogshelter.domain.missing.query.dto.MissingPostQueryDTO">
        SELECT p.id,
               p.title,
               p.view,
               COUNT(l.id) AS likeCount
        FROM missingPost p
                 LEFT JOIN missingPostLiked l ON p.id = l.post_id
        WHERE p.is_deleted = FALSE
        GROUP BY p.id, p.title, p.view
        ORDER BY p.view DESC
            LIMIT #{limit}
    </select>

    <!-- REQ-030 추천수 기준 인기 게시글 -->
    <select id="selectAllMissingPostsByLiked" resultType="com.backoven.catdogshelter.domain.missing.query.dto.MissingPostQueryDTO">
        SELECT p.id,
               p.title,
               p.view,
               COUNT(l.id) AS likeCount
        FROM missingPost p
                 LEFT JOIN missingPostLiked l ON p.id = l.post_id
        WHERE p.is_deleted = FALSE
        GROUP BY p.id, p.title, p.view
        ORDER BY COUNT(l.id) DESC
            LIMIT #{limit}
    </select>

    <!-- REQ-031 최신 게시글 -->
    <select id="selectAllMissingPostsLatest" resultType="com.backoven.catdogshelter.domain.missing.query.dto.MissingPostQueryDTO">
        SELECT
            p.id              AS id,        -- 번호
            p.title           AS title,     -- 제목
            p.created_at      AS createdAt, -- 작성일
            u.user_name       AS userName,  -- 작성자
            p.view            AS view,      -- 조회수
        IFNULL(COUNT(mpl.id), 0) AS likeCount -- 추천수
        FROM missingPost p
            LEFT JOIN user u ON p.user_id = u.user_id
            LEFT JOIN missingPostLiked mpl ON p.id = mpl.post_id
        WHERE p.is_deleted = FALSE
        GROUP BY p.id, p.title, p.created_at, u.user_name, p.view
        ORDER BY p.created_at DESC

            LIMIT #{limit}
    </select>

    <!-- REQ-028 조회수 증가 -->
    <update id="increaseView">
        UPDATE missingPost
        SET view = view + 1
        WHERE id = #{id}
    </update>

<!--실종신고 게시판 게시글 조회(조회 하면 view +1)-->
    <select id="selectPostById" parameterType="long" resultType="com.backoven.catdogshelter.domain.missing.query.dto.MissingPostQueryDTO">
        SELECT
            id,
            title,
            content,
            created_at,
            updated_at,
            view,
            head_id
        FROM missingPost
        WHERE id = #{id}
    </select>

    <!--게시판보드, 게시글 목록 조회 쿼리-->
    <select id="selectAllMissingPosts"
            resultType="com.backoven.catdogshelter.domain.missing.query.dto.MissingPostQueryDTO">
        SELECT
            p.id              AS id,        -- 번호
            p.title           AS title,     -- 제목
            p.created_at      AS createdAt, -- 작성일
            u.user_name       AS userName,  -- 작성자
            p.view            AS view,      -- 조회수
        IFNULL(COUNT(mpl.id), 0) AS likeCount -- 추천수
        FROM missingPost p
            LEFT JOIN user u ON p.user_id = u.user_id
            LEFT JOIN missingPostLiked mpl ON p.id = mpl.post_id
        WHERE p.is_deleted = FALSE
        GROUP BY p.id, p.title, p.created_at, u.user_name, p.view
        ORDER BY p.id DESC
    </select>

    <!-- 실종신고 게시글 내용 상세 조회 -->
    <select id="selectMissingPostDetail"
            parameterType="int"
            resultMap="MissingPostDetailResultMap">
        SELECT
            p.id               AS post_id,             -- 게시글 번호
            p.title            AS post_title,          -- 제목
            p.content          AS post_content,        -- 내용
            p.created_at       AS post_created_at,     -- 작성일
            u.user_name        AS post_user_name,      -- 작성자 이름
            p.view             AS post_view,           -- 조회수
            IFNULL(l.like_count, 0) AS post_like_count,-- 추천 수
            f.id AS file_id,
            f.file_rename AS file_rename,
            p.status           AS post_status,         -- 실종 상태
            p.detail_address   AS post_detail_address, -- 상세 위치
            p.gender           AS post_gender,         -- 성별
            p.age              AS post_age,            -- 나이
            p.registration_num AS post_registration_num,-- 등록번호
            p.breed            AS post_breed,          -- 품종
            p.animal_type      AS post_animal_type,    -- 동물 구분
            p.color            AS post_color,          -- 색상
            p.weight           AS post_weight,         -- 체중
            p.lost_date        AS post_lost_date,      -- 실종일자
            p.feature          AS post_feature,        -- 특징
            p.contact          AS post_contact         -- 연락처
        FROM missingPost p
                 LEFT JOIN user u ON p.user_id = u.user_id
                 LEFT JOIN (
            SELECT post_id, COUNT(*) AS like_count
            FROM missingPostLiked
            GROUP BY post_id
        ) l ON p.id = l.post_id
       LEFT JOIN missingPostFiles f ON p.id = f.post_id
        WHERE p.id = #{id}
          AND p.is_deleted = FALSE
    </select>

        <!-- 실종신고 게시글 하나 안에서  -->
    <resultMap id="MissingPostDetailResultMap"
               type="com.backoven.catdogshelter.domain.missing.query.dto.MissingPostQueryDetailDTO">
        <id property="id" column="post_id"/>
        <result property="title" column="post_title"/>
        <result property="content" column="post_content"/>
        <result property="createdAt" column="post_created_at"/>
        <result property="userName" column="post_user_name"/>
        <result property="view" column="post_view"/>
        <result property="likeCount" column="post_like_count"/>

        <!-- 실종신고 게시글 하나 안에서 동물 관련 정보 -->
        <result property="status" column="post_status"/>
        <result property="detailAddress" column="post_detail_address"/>
        <result property="gender" column="post_gender"/>
        <result property="age" column="post_age"/>
        <result property="registrationNum" column="post_registration_num"/>
        <result property="breed" column="post_breed"/>
        <result property="animalType" column="post_animal_type"/>
        <result property="color" column="post_color"/>
        <result property="weight" column="post_weight"/>
        <result property="lostDate" column="post_lost_date"/>
        <result property="feature" column="post_feature"/>
        <result property="contact" column="post_contact"/>


        <!-- 파일 리스트 -->
        <collection property="files"
                    ofType="com.backoven.catdogshelter.domain.missing.query.dto.MissingPostFileDTO">
            <id property="id" column="file_id"/>
            <result property="fileRename" column="file_rename"/>
        </collection>
    </resultMap>


    <!-- 댓글 목록 (페이징) -->
        <select id="selectMissingPostDetailComments" resultType="com.backoven.catdogshelter.domain.missing.query.dto.MissingPostCommentDTO">
            SELECT
                c.id,
                c.content,
                c.created_at AS createdAt,
                u.user_name  AS userName
            FROM missingPostComment c
                     LEFT JOIN user u ON c.user_id = u.user_id
            WHERE c.post_id = #{postId}
              AND c.is_deleted = FALSE
            ORDER BY c.created_at ASC
                LIMIT #{limit} OFFSET #{offset}
        </select>

        <!-- 댓글 총 개수 -->
        <select id="countComments" resultType="int">
            SELECT COUNT(*)
            FROM missingPostComment
            WHERE post_id = #{postId}
              AND is_deleted = FALSE
        </select>

</mapper>